package business.rules;

import com.hbg.otc.discounting.model.RuleSetup;
import com.hbg.otc.discounting.model.RulePrecedence;

/*
rule "Decide Winning Rule"
	salience -100
	when
		$list: List($rules: ruleSetup) 
       	$setup: RuleSetup() from $list
       
	then
		System.out.println("Offer " + $setup.getRuleNumber());
end	*/

rule "Define priority P1 on basis of overridenExplicitly flag"
	salience -50
	enabled($r.winningPriority == "")
	when
		$r: RuleSetup(isQualified, offer!=null, offer.overridenExplicitly)
	then
		modify($r){
			setWinningPriority("P1");
		}
end

rule "Define priority P2 on basis of hardcode flag"
	salience -50
	enabled($r.winningPriority == "")
	when
		$r: RuleSetup(isQualified, offer!=null, offer.hardcode, !offer.overridenExplicitly)
	then
		modify($r){
			setWinningPriority("P2");
		}
end

rule "Assign prioriy flag on basis of overriden flag"
	no-loop
	enabled($r.winningPriority == "")
	when
		$rulePrecedence: RulePrecedence()
		$r: RuleSetup(isQualified, offer!=null, offer.overridenExplicitly, $rulePrecedence.ruleName.equals("Must be overriden explicitly"))
	then
		modify($r){
			setWinningPriority($rulePrecedence.getPriority());
		}
			
end

rule "Assign prioriy flag on basis of hardcode flag"
	no-loop
	enabled($r.winningPriority == "")
	when
		$rulePrecedence: RulePrecedence()
		$r: RuleSetup(isQualified, offer!=null, offer.hardcode, $rulePrecedence.ruleName.equals("Hardcode"))
	then
		modify($r){
			setWinningPriority($rulePrecedence.getPriority());
		}
			
end

rule "Assign prioriy flag on basis of priority value"
	no-loop
	enabled($r.winningPriority == "")
	when
		$rulePrecedence: RulePrecedence()
		$r: RuleSetup(isQualified, offer!=null, offer.priority!=null, $rulePrecedence.ruleName.equals("Priority"))
	then
		modify($r){
			setWinningPriority($rulePrecedence.getPriority());
		}
			
end

rule "Decide winner on basis of combo field"
	salience -100
	when
		$r: RuleSetup(isQualified, offer!=null, offer.newComboField == 2, !isWinner)
	then
     	modify($r){
			setIsWinner(true);
		}
			
end

